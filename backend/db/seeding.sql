
create DATABASE fishingblog471;
USE fishingblog471;

CREATE TABLE MEMBER(
MUsername		VARCHAR(20)		NOT NULL,
MEmail			VARCHAR(20)		NOT NULL,
MPassword		VARCHAR(20)		NOT NULL,
UserDescription		VARCHAR(200)	,
JoinDate		DATE			NOT NULL,
PRIMARY KEY (MEmail),
UNIQUE (MUsername)
);

CREATE TABLE ADMIN(
AUsername		VARCHAR(20)		NOT NULL,
AEmail			VARCHAR(20)		NOT NULL,
APassword		VARCHAR(20)		NOT NULL,
PRIMARY KEY (AEmail),
UNIQUE (AUsername)
);

CREATE TABLE FISH(
ScientificName		VARCHAR(50)		NOT NULL,
Size			VARCHAR(10)		,
Description		VARCHAR(200)	NOT NULL,
FreshOrSaltwater	INT			NOT NULL,
Weight			VARCHAR(10)		,
PRIMARY KEY (ScientificName)
);

CREATE TABLE FISH_COMMON_NAMES(
FScientificName		VARCHAR(50)		NOT NULL,
CommonName		VARCHAR(50)		NOT NULL,
PRIMARY KEY (CommonName),
FOREIGN KEY (FScientificName) REFERENCES FISH (ScientificName)
);

CREATE TABLE FISH_SUITABLE_LURES(
FScientificName		VARCHAR(50)		NOT NULL,
LureType		VARCHAR(50)		NOT NULL,
	PRIMARY KEY (LureType),
FOREIGN KEY (FScientificName) REFERENCES FISH (ScientificName)
);

CREATE TABLE FISHING_LOCATION (
Name			VARCHAR(50)		NOT NULL,
Country		VARCHAR(50)		NOT NULL,
PRIMARY KEY (Name)
);

CREATE TABLE FISHING_TYPES_LOC (
LocName		VARCHAR(50)		NOT NULL,
FishingType		VARCHAR(30)		NOT NULL,
PRIMARY KEY (FishingType),
FOREIGN KEY (LocName) REFERENCES FISHING_LOCATION (Name)
);

CREATE TABLE FISHING_GEAR (
ItemID			INT			NOT NULL,
QuantityInStock	INT			NOT NULL,
Description		VARCHAR(300)	,
StockStatus		VARCHAR(20)		NOT NULL,
Discount		INT			,
Price			FLOAT			NOT NULL,
PRIMARY KEY (ItemID)
);

CREATE TABLE FISHING_TYPES_GEAR (
ItemID			INT			NOT NULL,
FishingType		VARCHAR(20)		NOT NULL,
PRIMARY KEY (FishingType),
FOREIGN Key (ItemID) REFERENCES FISHING_GEAR (ItemID)
);


CREATE TABLE BLOG_POST(
PostID			INT			NOT NULL,
Title			VARCHAR(20)		NOT NULL,
Body			TEXT 	NOT NULL,
MemAuthUsername	VARCHAR(20)		,
AdminPostFlag		INT			NOT NULL,
PRIMARY KEY (PostID),
FOREIGN KEY (MemAuthUsername) REFERENCES MEMBER (MUsername)
);

CREATE TABLE BLOG_POST_IMAGES (
	PostID			INT			NOT NULL,
	ImageID		INT	NOT NULL,
PRIMARY KEY (ImageID),
FOREIGN KEY (PostID) REFERENCES BLOG_POST (PostID)
);

CREATE TABLE COMMENT (
MemUsername		VARCHAR(20)		NOT NULL,
PostID			INT			NOT NULL,
DateWritten		DATE			NOT NULL,
Title			VARCHAR(20)		,
Body			TEXT	NOT NULL,
PRIMARY KEY (DateWritten),
FOREIGN KEY (MemUsername) REFERENCES MEMBER (MUsername),
FOREIGN KEY (PostID) REFERENCES BLOG_POST (PostID)
);

CREATE TABLE REVIEW (
MemUsername		VARCHAR(20)		NOT NULL,
ItemID			INT			NOT NULL,
DateWritten		DATE			NOT NULL,
Title			VARCHAR(20)		,
Body			TEXT	NOT NULL,
Rating			INT			NOT NULL,
PRIMARY KEY (DateWritten),
FOREIGN KEY (ItemID) REFERENCES FISHING_GEAR (ItemID),
FOREIGN KEY (MemUsername) REFERENCES MEMBER (MUsername)
);

CREATE TABLE CART (
CartID			INT			NOT NULL,
CartStatus		VARCHAR(20)		NOT NULL,
CreationDate		DATE			NOT NULL,
MemUsername		VARCHAR(20)		NOT NULL,
PRIMARY KEY (CartID),
FOREIGN KEY (MemUsername) REFERENCES MEMBER (MUsername)
);

CREATE TABLE TRANSACTION (
TransactionID		INT			NOT NULL,
CartID			INT			NOT NULL,
MemUsername		VARCHAR(20)		NOT NULL,
Status			VARCHAR(20)		NOT NULL,
CardNum		VARCHAR(16)		NOT NULL,
CardExpDate		VARCHAR(4)		NOT NULL,
CVNum		VARCHAR(3)		NOT NULL,
Amount		FLOAT			NOT NULL,
Date			DATE			NOT NULL,
PRIMARY KEY (TransactionID),
FOREIGN KEY (CartID) REFERENCES CART (CartID),
FOREIGN KEY (MemUsername) REFERENCES MEMBER (MUsername)
);

CREATE TABLE `ORDER` (
OrderID		INT			NOT NULL,
TransactionID		INT			NOT NULL,
ShippingAddress	VARCHAR(50)		NOT NULL,
Date			DATE			NOT NULL,
Status			VARCHAR(20)		NOT NULL,
PRIMARY KEY (OrderID),
FOREIGN KEY (TransactionID) REFERENCES TRANSACTION (TransactionID)
);

CREATE TABLE ORDER_DETAILS (
OrderID		INT			NOT NULL,
ItemID			INT			NOT NULL,
Quantity		INT			NOT NULL,
FOREIGN KEY (OrderID) REFERENCES `ORDER` (OrderID),
FOREIGN KEY (ItemID) REFERENCES FISHING_GEAR (ItemID)
);

CREATE TABLE TOOK_PLACE_AT (
PostID			INT			NOT NULL,
LocationID		VARCHAR(50)		NOT NULL,
FOREIGN KEY (PostID) REFERENCES BLOG_POST (PostID),
FOREIGN KEY (LocationID) REFERENCES FISHING_LOCATION (Name)
);

CREATE TABLE ABOUT (
PostID			INT			NOT NULL,
FishScienceName	VARCHAR(50)		NOT NULL,
FOREIGN KEY (PostID) REFERENCES BLOG_POST (PostID),
FOREIGN KEY (FishScienceName) REFERENCES FISH (ScientificName)
);

CREATE TABLE WRITTEN_BY_ADMIN (
PostID			INT			NOT NULL,
AUsername		VARCHAR(20)		NOT NULL,
FOREIGN KEY (PostID) REFERENCES BLOG_POST (PostID),
FOREIGN KEY (AUsername) REFERENCES ADMIN (AUsername)
);

CREATE TABLE MENTIONED_IN (
PostID			INT			NOT NULL,
ItemID			INT 			NOT NULL,
FOREIGN KEY (PostID) REFERENCES BLOG_POST (PostID),
FOREIGN KEY (ItemID) REFERENCES FISHING_GEAR (ItemID)
);

CREATE TABLE PLACED_IN(
CartID			INT			NOT NULL,
ItemID			INT 			NOT NULL,
Quantity		INT			NOT NULL,
FOREIGN KEY (CartID) REFERENCES CART(CartID),
FOREIGN KEY (ItemID) REFERENCES FISHING_GEAR (ItemID)
);

CREATE TABLE SOURCED_BY(
AUsername		VARCHAR(20)		NOT NULL,
ItemID			INT 			NOT NULL,
FOREIGN KEY (AUsername) REFERENCES ADMIN (AUsername),
FOREIGN KEY (ItemID) REFERENCES FISHING_GEAR (ItemID)
);
